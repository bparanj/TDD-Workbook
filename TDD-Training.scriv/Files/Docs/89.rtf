{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf230
{\fonttbl\f0\fnil\fcharset0 Verdana;\f1\fnil\fcharset0 Tahoma;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid2\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\pard\tx720\fi720\pardirnatural

\f0\fs28 \cf0 Rhythm of TDD\
3 A\'92s of Testing\
State Based Testing\
Interaction Testing\
Mocks and Stubs\
When to use Stubs\
When to use Mocks\
When to combine Mocks and Stubs\
The Three Basic Pillars of Good Unit Tests\
How to Avoid Brittle Tests\
How to overcome the hurdles to writing the test first\
Learn key techniques for making tests easy to understand and for avoiding and removing test code duplication\
\
\

\b\fs32 Presentation Structure\

\b0\fs28 \
Outline\
Check with Audience - Font size, volume etc\
Promise\
Know your Audience\
Cycle 3 times [Introduction to Concept, Demo (near miss), Exercise]\
Near Miss\
Verbal Punctuation\
Rhetorical Questions with 5 to 10 seconds pause\
Remind on Delivered Promise\
Salute the audience\
Feedback : [Anonymous, Incentive for every participant]\
50% Lecture and 50% Lab\
\
\pard\pardeftab720\sa400

\f1\fs40 \cf0 \cb2 TDD Boot Camp attendees will learn about the following topics:\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls1\ilvl0\cf0 {\listtext	\'95	}The TDD mindset\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440
\ls1\ilvl1\cf0 {\listtext	\uc0\u9702 	}Why is TDD important?\
{\listtext	\uc0\u9702 	}Red Green Refactor\
{\listtext	\uc0\u9702 	}Behavior driven development\
{\listtext	\uc0\u9702 	}How TDD helps you design software\
{\listtext	\uc0\u9702 	}Why testing first is better than testing after\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls1\ilvl0\cf0 {\listtext	\'95	}Writing testable code\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440
\ls1\ilvl1\cf0 {\listtext	\uc0\u9702 	}How to write tests that run fast and are easy to maintain\
{\listtext	\uc0\u9702 	}What makes code difficult to test\
{\listtext	\uc0\u9702 	}The dependency inversion principle\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls1\ilvl0\cf0 {\listtext	\'95	}Advanced TDD\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440
\ls1\ilvl1\cf0 {\listtext	\uc0\u9702 	}Single responsibility principle, and how TDD helps you design small classes\
{\listtext	\uc0\u9702 	}How to use mocking \
{\listtext	\uc0\u9702 	}How to effectively translate technical specs into tests\
}