{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf230
{\fonttbl\f0\fnil\fcharset0 Verdana;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 Properties of a good unit test\
How to break dependency\
Techniques for breaking dependencies\
Writing our first test\
Indirect testing of state\
Problems with constructor injection\
When you should use property injection\
Interaction testing using mock objects\
The difference between mocks and stubs\
Using a mock and stub together\
One mock per test\
Stub chains: Stubs that produce mocks or other stubs\
Isolation frameworks\
Expectations on mocks and stubs\
Strict vs Non-Strict mocks\
Arrange act assert syntax for isolation\
Traps to avoid when using isolation frameworks\
Unreadable test code\
Verifying the wrong things\
Having more than one mock per test\
Over specifying the tests\
Use stubs instead of mocks when you can\
Avoid using stubs as mocks\
Don\'92t repeat logic in your tests\
Don\'92t use magic values\
The three pillars of good tests\
Writing trustworthy tests\
Production bugs\
Test bugs\
Semantics or API changes\
Conflicting or invalid tests\
Eliminating duplicate tests\
Avoiding logic in tests\
Testing only one thing\
Assuring code coverage\
Writing maintainable tests\
Testing private or protected methods\
Making methods public\
Extracting methods to new classes\
Making methods class method\
Removing duplication\
Using setup methods in a maintainable manner\
Enforcing test isolation\
Avoiding multiple asserts\
Refactoring into multiple tests\
Using parametrized tests\
Overriding to_s\
Avoiding over specification in tests\
Specifying purely internal behavior\
Using mocks instead of stubs\
Assuming an order or exact match when it\'92s not needed\
Writing readable tests\
Naming variables\
Assert yourself with meaning\
Separating asserts from actions\
}